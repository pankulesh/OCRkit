#!/usr/bin/python

from selenium.webdriver import Firefox
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select, WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys

import requests
import argparse
import numpy as np

parser = argparse.ArgumentParser(description='Load stellar isochrone with web interface CMD 3.0 (http://stev.oapd.inaf.it/cgi-bin/cmd) automatically with given age and metallicity')
parser.add_argument("age", help='Age, years')
parser.add_argument("-m","--metallicity", default="0.0152", help="Metallicity, default Z=0.0152")
#parser.add_argument("delta", type=float, help="bandwidth of the kernel, arcmin")
args = parser.parse_args()
age = args.age
metallicity = args.metallicity

opts = Options()
opts.set_headless()
assert opts.headless  # Operating in headless mode
browser = Firefox(options=opts)
browser.get('http://stev.oapd.inaf.it/cgi-bin/cmd')

photsys =  Select(browser.find_element_by_name('photsys_file'))
photsys.select_by_visible_text("Gaia's DR2 G, G_BP and G_RP (Vegamags, Gaia passbands from Weiler 2018)")

isoc_zeta = browser.find_element_by_name("isoc_zeta")
isoc_zeta.clear()
isoc_zeta.send_keys(metallicity)

isoc_age = browser.find_element_by_name("isoc_age")
isoc_age.clear()
isoc_age.send_keys(age, Keys.RETURN)

linkelement = WebDriverWait(browser, 60).until(EC.presence_of_element_located((By.PARTIAL_LINK_TEXT, "output")))
link = linkelement.get_attribute('href')
print("Got the link to isochrone: "+link)    
browser.quit()
res = requests.get(link)

try:
    res.raise_for_status()
except Exception as exc:
    print('There was a problem: %s' % (exc))
    exit()

with open('cmd_{}_{}.txt'.format(age, metallicity), 'w') as f:
    f.write(res.text)

clear_isoch = np.loadtxt('cmd_{}_{}.txt'.format(age, metallicity), comments='#', usecols = (3, 4, 5, 6, -4, -3, -2, -1))
with open('isochrone_{}_{}.txt'.format(age, metallicity), 'w') as f:
    f.write('#Isochrone with age of {:.0f} years and metallicity Z={}\n'.format(float(age), metallicity))
    f.write('#Generated by get_CMD_requests_selenium_firefox.py\n')
    f.write('#{:>6} {:>6} {:>7} {:>7} {:>7} {:>9} {:>9} {:>7}\n'.format('Mass', 'log(L)', 'log(T)', 'log(g)', 'Gmag', 'G_BPbrmag',  'G_BPftmag',  'G_RPmag'))
    f.write('#{:>6} {:>6} {:>7} {:>7} {:>7} {:>9} {:>9} {:>7}\n'.format('Msun', ' ', ' ', ' ', 'mag', 'mag', 'mag', 'mag'))
    for step in clear_isoch:
        f.write(' {:>6.3f} {:>6.3f} {:>7.4f} {:>7.3f} {:>7.3f} {:>9.3f} {:>9.3f} {:>7.3f}\n'.format(*step))


